// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	internal "github.com/tracmo/maroto/internal"

	props "github.com/tracmo/maroto/pkg/props"
)

// Signature is an autogenerated mock type for the Signature type
type Signature struct {
	mock.Mock
}

// AddSpaceFor provides a mock function with given fields: label, cell, textProp
func (_m *Signature) AddSpaceFor(label string, cell internal.Cell, textProp props.Text) {
	_m.Called(label, cell, textProp)
}

type mockConstructorTestingTNewSignature interface {
	mock.TestingT
	Cleanup(func())
}

// NewSignature creates a new instance of Signature. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewSignature(t mockConstructorTestingTNewSignature) *Signature {
	mock := &Signature{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
