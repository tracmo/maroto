// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	internal "github.com/tracmo/maroto/internal"

	props "github.com/tracmo/maroto/pkg/props"
)

// TableList is an autogenerated mock type for the TableList type
type TableList struct {
	mock.Mock
}

// BindGrid provides a mock function with given fields: part
func (_m *TableList) BindGrid(part internal.MarotoGridPart) {
	_m.Called(part)
}

// Create provides a mock function with given fields: header, contents, defaultFontFamily, prop
func (_m *TableList) Create(header []string, contents [][]string, defaultFontFamily string, prop ...props.TableList) {
	_va := make([]interface{}, len(prop))
	for _i := range prop {
		_va[_i] = prop[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, header, contents, defaultFontFamily)
	_ca = append(_ca, _va...)
	_m.Called(_ca...)
}

type mockConstructorTestingTNewTableList interface {
	mock.TestingT
	Cleanup(func())
}

// NewTableList creates a new instance of TableList. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewTableList(t mockConstructorTestingTNewTableList) *TableList {
	mock := &TableList{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
